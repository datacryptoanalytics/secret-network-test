{"message":"this function takes 2 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":2396,"byte_end":2405,"line_start":88,"line_end":88,"column_start":28,"column_end":37,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(1000, \"earth\"));","highlight_start":28,"highlight_end":37}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":2407,"byte_end":2416,"line_start":88,"line_end":88,"column_start":39,"column_end":48,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(1000, \"earth\"));","highlight_start":39,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":2418,"byte_end":2439,"line_start":88,"line_end":88,"column_start":50,"column_end":71,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(1000, \"earth\"));","highlight_start":50,"highlight_end":71}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":2387,"byte_end":2395,"line_start":88,"line_end":88,"column_start":19,"column_end":27,"is_primary":true,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(1000, \"earth\"));","highlight_start":19,"highlight_end":27}],"label":"expected 2 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:88:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let env = mock_env(&deps.api, \"creator\", &coins(1000, \"earth\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 arguments\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":2991,"byte_end":3000,"line_start":105,"line_end":105,"column_start":28,"column_end":37,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":28,"highlight_end":37}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3002,"byte_end":3011,"line_start":105,"line_end":105,"column_start":39,"column_end":48,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":39,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3013,"byte_end":3031,"line_start":105,"line_end":105,"column_start":50,"column_end":68,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":50,"highlight_end":68}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":2982,"byte_end":2990,"line_start":105,"line_end":105,"column_start":19,"column_end":27,"is_primary":true,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":19,"highlight_end":27}],"label":"expected 2 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:105:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 arguments\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":3155,"byte_end":3164,"line_start":109,"line_end":109,"column_start":28,"column_end":37,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));","highlight_start":28,"highlight_end":37}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3166,"byte_end":3174,"line_start":109,"line_end":109,"column_start":39,"column_end":47,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));","highlight_start":39,"highlight_end":47}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3176,"byte_end":3194,"line_start":109,"line_end":109,"column_start":49,"column_end":67,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));","highlight_start":49,"highlight_end":67}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3146,"byte_end":3154,"line_start":109,"line_end":109,"column_start":19,"column_end":27,"is_primary":true,"text":[{"text":"        let env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));","highlight_start":19,"highlight_end":27}],"label":"expected 2 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:109:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 arguments\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":3673,"byte_end":3682,"line_start":124,"line_end":124,"column_start":28,"column_end":37,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":28,"highlight_end":37}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3684,"byte_end":3693,"line_start":124,"line_end":124,"column_start":39,"column_end":48,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":39,"highlight_end":48}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3695,"byte_end":3713,"line_start":124,"line_end":124,"column_start":50,"column_end":68,"is_primary":false,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":50,"highlight_end":68}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3664,"byte_end":3672,"line_start":124,"line_end":124,"column_start":19,"column_end":27,"is_primary":true,"text":[{"text":"        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":19,"highlight_end":27}],"label":"expected 2 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:124:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 arguments\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":3844,"byte_end":3853,"line_start":128,"line_end":128,"column_start":35,"column_end":44,"is_primary":false,"text":[{"text":"        let unauth_env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));","highlight_start":35,"highlight_end":44}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3855,"byte_end":3863,"line_start":128,"line_end":128,"column_start":46,"column_end":54,"is_primary":false,"text":[{"text":"        let unauth_env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));","highlight_start":46,"highlight_end":54}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3865,"byte_end":3883,"line_start":128,"line_end":128,"column_start":56,"column_end":74,"is_primary":false,"text":[{"text":"        let unauth_env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));","highlight_start":56,"highlight_end":74}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":3835,"byte_end":3843,"line_start":128,"line_end":128,"column_start":26,"column_end":34,"is_primary":true,"text":[{"text":"        let unauth_env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));","highlight_start":26,"highlight_end":34}],"label":"expected 2 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:128:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let unauth_env = mock_env(&deps.api, \"anyone\", &coins(2, \"token\"));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 arguments\u001b[0m\n\n"}
{"message":"this function takes 2 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":4223,"byte_end":4232,"line_start":137,"line_end":137,"column_start":33,"column_end":42,"is_primary":false,"text":[{"text":"        let auth_env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":33,"highlight_end":42}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":4234,"byte_end":4243,"line_start":137,"line_end":137,"column_start":44,"column_end":53,"is_primary":false,"text":[{"text":"        let auth_env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":44,"highlight_end":53}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":4245,"byte_end":4263,"line_start":137,"line_end":137,"column_start":55,"column_end":73,"is_primary":false,"text":[{"text":"        let auth_env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":55,"highlight_end":73}],"label":"supplied 3 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":4214,"byte_end":4222,"line_start":137,"line_end":137,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"        let auth_env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));","highlight_start":24,"highlight_end":32}],"label":"expected 2 arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this function takes 2 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:137:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let auth_env = mock_env(&deps.api, \"creator\", &coins(2, \"token\"));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msupplied 3 arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected 2 arguments\u001b[0m\n\n"}
{"message":"aborting due to 6 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0061`.\u001b[0m\n"}
